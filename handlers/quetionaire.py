from aiogram import Router
from aiogram.types import ReplyKeyboardRemove
from utils.states import *
from keyboards.keyboards import *
from model_db import *
from telegram_bot import handle_file, send_to_channel, server_ip
from aiogram.fsm.context import FSMContext

router = Router()


@router.message(FormState.about_player)
async def form_state_about_player(message: Message, state: FSMContext):
    data: str
    is_text: bool

    if message.voice:
        file_id = message.voice.file_id

        await handle_file(file_id=file_id, author_id=message.from_user.id)
        data = file_id
        await state.update_data(about_player=file_id)
        is_text = False
    elif not message.text:
        await message.answer(f"–ù–∞–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç. –ò–ª–∏ –≥–æ–ª–æ—Å–æ–≤—É—Ö—É. –®–∞—Ä–∏—à—å?\n"
                             f"–ò—Ç–∞–∫...")
        await message.answer(f"–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ. –ö–∞–∫–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –í—ã –≤ —Å–µ–±–µ –≤–∏–¥–∏—Ç–µ?\n"
                             f"\n"
                             f"<i>–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç</i>")
        return
    elif message.text.lower() in ['/new_form', '/start']:
        await message.answer(f"–î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏ –æ—Å—Ç–∞–≤—à—É—é—Å—è —Ñ–æ—Ä–º—É")
        return
    elif len(message.text) < 10:
        await message.answer(f"–ú–∞–ª–æ–≤–∞—Ç–æ –∫–∞–∫-—Ç–æ. –ù–∞–ø–∏—à–∏ –ø–æ–±–æ–ª—å—à–µ –æ —Å–µ–±–µ –Ω—É –ø–∂üôè")
        return
    else:
        is_text = True
        data = message.text

    await message.answer(f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ... –¢–∞–∫ –∏ –∑–∞–ø–∏—à–µ–º...")
    await state.update_data(about_player=data)

    state_data = await state.get_data()
    FSMForm.update(
        about_player=data,
        is_about_player_text=is_text).where(FSMForm.id == state_data['id_form']).execute()
    await state.set_state(FormState.what_to_do)
    await message.answer(f"–ß–µ–º –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ? –ï—Å—Ç—å –ª–∏ —É –í–∞—Å –∫–∞–∫–∞—è-—Ç–æ —Ü–µ–ª—å?\n"
                         f"<i>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç. \n"
                         f"\n"
                         f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç</i>\n"
                         f"<b>–í–æ–ø—Ä–æ—Å 2/4</b>")


@router.message(FormState.what_to_do)
async def form_state_what_to_do(message: Message, state: FSMContext):
    data: str
    is_text: bool

    if message.voice:
        file_id = message.voice.file_id

        await handle_file(file_id=file_id, author_id=message.from_user.id)
        data = file_id
        is_text = False
    elif not message.text and not message.voice:
        await message.answer(f"–¢–µ–∫—Å—Ç. –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ê–≥–∞?\n"
                             f"–ü—É–º-–ø—É–º-–ø—É–º...")
        await message.answer(f"–ß–µ–º –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ? –ï—Å—Ç—å –ª–∏ —É –í–∞—Å –∫–∞–∫–∞—è-—Ç–æ —Ü–µ–ª—å?\n"
                             f"<i>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç. \n"
                             f"\n"
                             f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç</i>")
        return
    else:
        data = message.text
        is_text = True
    await message.answer(f"–£–≥—É. –ò–¥–µ–º –¥–∞–ª—å—à–µ.")
    await state.update_data(what_to_do=data)
    state_data = await state.get_data()

    FSMForm.update(
        what_to_do=data,
        is_what_to_do_text=is_text).where(FSMForm.id == state_data['id_form']).execute()
    await state.set_state(FormState.game_experience)
    await message.answer(f"–ö–∞–∫–æ–π –í–∞—à –æ–ø—ã—Ç –∏–≥—Ä—ã –≤ Minecraft? –ù–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –≤ –Ω–µ–≥–æ –∏–≥—Ä–∞–µ—Ç–µ?\n"
                         f"<i>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç. \n"
                         f"\n"
                         f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç</i>\n"
                         f"<b>–í–æ–ø—Ä–æ—Å 3/4</b>")


@router.message(FormState.game_experience)
async def form_state_game_experience(message: Message, state: FSMContext):
    data: str
    is_text: bool

    if message.voice:
        file_id = message.voice.file_id

        await handle_file(file_id=file_id, author_id=message.from_user.id)
        data = file_id
        is_text = False
    elif not message.text and not message.voice:
        await message.answer(f"–¢—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫ —Ç–µ–∫—Å—Ç –ø–∏—Å–∞—Ç—å? –ê –∫–∞–∫ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å?\n"
                             f"–í–æ –¥–µ–ª–∞. –ü–æ–Ω–∞–±–∏—Ä–∞—é—Ç –≤—Å—è–∫–∏—Ö...")
        await message.answer(f"–ö–∞–∫–æ–π –í–∞—à –æ–ø—ã—Ç –∏–≥—Ä—ã –≤ Minecraft? –ù–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –≤ –Ω–µ–≥–æ –∏–≥—Ä–∞–µ—Ç–µ?\n"
                             f"<i>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç. \n"
                             f"\n"
                             f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç</i>")
        return

    else:
        data = message.text
        is_text = True
    await state.update_data(game_experience=data)
    state_data = await state.get_data()

    FSMForm.update(
        game_experience=data,
        is_game_experience_text=is_text).where(FSMForm.id == state_data['id_form']).execute()
    '''await state.set_state(FormState.nick)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–∏–∫ –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ \n"
                         f"\n"
                         f"<i>–ï—Å–ª–∏ –í—ã –µ—â—ë –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª–∏ –Ω–∏–∫, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É</i> <b>–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–æ–ø—Ä–æ—Å</b>\n"
                         f"<b>–í–æ–ø—Ä–æ—Å 4/5</b>",
                         reply_markup=pass_question_keyboard)'''
    await state.set_state(FormState.garik_relationship)
    await message.answer(f"–û–∫–µ–π, –∏ –ø–æ–∂–∞–ª—É–π, —Å–∞–º—ã–π –≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å.")
    await message.answer(f"–£–º–µ–µ—Ç–µ –ª–∏ –≤—ã –∏–≥—Ä–∞—Ç—å –Ω–∞ –∫–∞–º–Ω—è—Ö?\n"
                         f"<b>–í–æ–ø—Ä–æ—Å 4/4</b>",
                         reply_markup=garik_keyboard)


@router.message(NickConfirm.confirm)
async def form_state_nick_confirm(message: Message, state: FSMContext):
    data = await state.get_data()
    if message.text == '–î–∞':
        (FSMForm.update(
            nick=data['nick']).where(FSMForm.telegram_id == message.from_user.id)
         .where(FSMForm.verdict == True).execute())

        await message.answer(f"–û—Ç–ª–∏—á–Ω–æ!\n\n"
                             f""
                             f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ IP {server_ip}\n"
                             f"–£—á—Ç–∏—Ç–µ, —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –í–∞—à–µ–≥–æ –Ω–∏–∫–∞ –≤ –≤–∞–π—Ç–ª–∏—Å—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 3 —á–∞—Å–æ–≤.\n"
                             f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –í—ã —Å –Ω–∞–º–∏!", reply_markup=ReplyKeyboardRemove())
        await state.clear()
    elif message.text == '–ù–µ—Ç, –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫':
        await message.answer(f"–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–∏–∫ –≤ Minecraft \n"
                             f"\n"
                             f"<i>–ü–æ–∑–∂–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–æ–≤, "
                             f"–ø–æ—ç—Ç–æ–º—É –ø–æ–¥—É–º–∞–π—Ç–µ, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–∏—Å–∞—Ç—å</i>", reply_markup=ReplyKeyboardRemove())
        await state.set_state(NickConfirm.nick)
    else:
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞")


@router.message(NickConfirm.nick)
async def form_state_nick_nick(message: Message, state: FSMContext):
    data: str
    msg = message.text

    if not message.text:
        if message.voice:
            await message.answer(f"–ú–ù–ï –ó–ê–ß–ï–ú –¢–í–û–Å –ì–°? –°–ú–ï–®–ù–û –¢–ò–ü–ê?")
        if message.photo:
            await message.answer(f"–ü–æ —Ñ–æ—Ç–∫–µ —á—Ç–æ-–ª–∏ —è –¥–æ–ª–∂–µ–Ω –Ω–∏–∫ –ø—Ä–æ—á–∏—Ç–∞—Ç—å? –ù–µ —É–º–µ—é, –ø—Ä–æ—Å—Ç–∏—Ç–µ(")
        if message.video:
            await message.answer(f"–í –≤–∏–¥–µ–æ —è –∫–∞–∫ –Ω–∏–∫ —É–≤–∏–∂—É? –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∏–∫, –Ω–µ –∑–Ω–∞–µ—à—å, –ø—Ä–æ–ø—É—Å–∫–∞–π –≤–æ–ø—Ä–æ—Å")
        else:
            await message.answer(f"–ü—Ä–æ—Å—Ç–æ –Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–º —Å–∫–∏–Ω—å –ø–æ–∂–∞–ª—É–π—Å—Ç –ø—Ä–æ—à—É —Ç–µ–±—è")
        await message.answer(f"–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–∏–∫ –≤ Minecraft \n"
                             f"\n"
                             f"<i>–ü–æ–∑–∂–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–æ–≤, "
                             f"–ø–æ—ç—Ç–æ–º—É –ø–æ–¥—É–º–∞–π—Ç–µ, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–∏—Å–∞—Ç—å</i>")
        return

    if FSMForm.select().where(FSMForm.nick == msg).count():
        await message.answer(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ—Ç –Ω–∏–∫ –∑–∞–Ω—è—Ç. \n"
                             f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π((")
        return

    await state.update_data(nick=msg)

    await message.answer(f"–í—ã —É–≤–µ—Ä–µ–Ω—ã?\n"
                         f"<i>–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø–æ—ç—Ç–æ–º—É –ø–æ–¥—É–º–∞–π—Ç–µ, "
                         f"–Ω—É–∂–µ–Ω –ª–∏ –í–∞–º —Ç–∞–∫–æ–π –Ω–∏–∫</i>", reply_markup=nick_keyboard)
    await state.set_state(NickConfirm.confirm)


@router.message(FormState.garik_relationship)
async def form_state_garik_relationship(message: Message, state: FSMContext):
    msg = message.text

    if msg in ['–ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–∞—Ä–∏–∫', '–ù–µ—Ç', '–ß—Ç–æ?']:
        if msg == '–ß—Ç–æ?':
            await message.answer(f"–¢—ã –µ—â–µ –ø—Ä–æ —Ç–∞–±—É—Ä–µ—Ç–∫–∏ –Ω–µ —Å–ª—ã—à–∞–ª...")
        await state.update_data(garik_relationship=msg)
    else:
        await message.answer(f"–ù–∞ –∫–Ω–æ–ø–∫—É –Ω–∞–∂–º–∏ —É–∂–µ –ª—é–±—É—é")
        return

    data = await state.get_data()
    await state.clear()
    FSMForm.update(
        garik_relationship=msg,
        is_filled=True
    ).where(FSMForm.id == data['id_form']).execute()
    await message.answer(f"–°–ø–∞—Å–∏–±–æ! –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∑–∞—è–≤–∫—É –∏ –æ—Ç–≤–µ—Ç–∏–º –í–∞–º –∑–¥–µ—Å—å, –≤ –±–æ—Ç–µ.",
                         reply_markup=ReplyKeyboardRemove()
                         )

    await send_to_channel(data=data, user_id=message.from_user.id)
